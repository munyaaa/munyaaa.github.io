{"version":3,"sources":["components/Navbar/style.module.scss","components/ImageIcon/style.module.scss","components/ImageProfile/style.module.scss","components/Page/style.module.scss","components/Icon/style.module.scss","components/Page/index.tsx","components/ImageIcon/index.tsx","components/Navbar/index.tsx","components/ImageProfile/index.tsx","components/Layout/index.tsx","components/Text/index.tsx","components/Icon/index.tsx","pages/Home/index.tsx","pages/Experiences/index.tsx","pages/Skills/index.tsx","pages/Projects/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Page","children","className","styles","ImageIcon","props","StyleBG","backgroundImage","imgUrl","StyleBC","backgroundColor","to","route","activeClassName","exact","id","ImageIconContainer","style","Navbar","NavbarItem","ImageProfile","ImageProfileContainer","Layout","console","log","direction","Text","Icon","Style","Type","Data","href","Url","Home","React","Component","App","basename","process","path","Experiences","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6d5bf9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"style_Navbar__UMEFq\",\"NavbarItem\":\"style_NavbarItem__3OmOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageIconContainer\":\"style_ImageIconContainer__2XxeG\",\"ImageIcon\":\"style_ImageIcon__1nArV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageProfileContainer\":\"style_ImageProfileContainer__12HwC\",\"ImageProfile\":\"style_ImageProfile__1n6Uo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"style_Page__3mWhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"style_Icon__H9gGD\"};","import React from 'react'\r\nimport styles from './style.module.scss'\r\n\r\nconst Page : React.FC = ({children}) => {\r\n    return (\r\n        <div className={styles.Page}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page","import React, { CSSProperties } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './style.module.scss'\r\nimport './style.scss'\r\n\r\ninterface Props {\r\n    id?: string\r\n    imgUrl : string\r\n    route? : string\r\n    backgroundColor? : string\r\n}\r\n\r\nconst ImageIcon : React.SFC<Props> = (props) => {\r\n    const StyleBG : CSSProperties = {\r\n        backgroundImage: 'url(' + props.imgUrl + ')',\r\n    }\r\n    const StyleBC : CSSProperties = {\r\n        backgroundColor: props.backgroundColor\r\n    }\r\n    return (\r\n        <NavLink to={`${props.route}`} activeClassName=\"active\" exact>\r\n            <div id={`${props.id}`} className={styles.ImageIconContainer} style={StyleBC}>\r\n                <div className={styles.ImageIcon} style={StyleBG}></div>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default ImageIcon","import React from 'react'\r\nimport styles from './style.module.scss'\r\nimport ImageIcon from '../ImageIcon'\r\n\r\nconst  Navbar : React.FC = () => {\r\n    return(\r\n        <div className={styles.Navbar}>\r\n            <span>\r\n                <ImageIcon imgUrl=\"/images/logo.png\" backgroundColor=\"#ffca3a\"/>\r\n            </span>\r\n            <span className={styles.NavbarItem}>\r\n                <ImageIcon route =\"/\" imgUrl=\"/images/contact.png\"/>\r\n                <ImageIcon route =\"/experiences\" imgUrl=\"/images/team.png\"/>\r\n                <ImageIcon route =\"/skills\" imgUrl=\"/images/skills.png\"/>\r\n                <ImageIcon route =\"/projects\" imgUrl=\"/images/innovation.png\"/>\r\n            </span>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport styles from './style.module.scss'\r\n\r\nconst ImageProfile : React.FC = () => {\r\n    return (\r\n        <div className={styles.ImageProfileContainer}>\r\n            <div className={styles.ImageProfile}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageProfile","import React from 'react'\r\nimport './style.scss'\r\n\r\ninterface Props {\r\n    direction: String\r\n}\r\n\r\nconst Layout : React.SFC<Props> = (props) => {\r\n    console.log(props.direction)\r\n    return (\r\n        <div className={`layout ${props.direction}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\nimport './style.scss'\r\n\r\nconst Text : React.FC = () => {\r\n    return(\r\n        <div>\r\n            <div><span className=\"text var1\">HELLO!</span></div>\r\n            <div><span className=\"text var2\">I'M JESSI</span></div>\r\n            <div><span className=\"text var3\">Graphic Designer & Front End Developer</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text","import React from 'react'\r\nimport styles from './style.module.scss'\r\ninterface Props {\r\n    Type: string\r\n    Data: string\r\n    Url: string\r\n}\r\n\r\nconst Icon : React.SFC<Props> = (props) => {\r\n    const Style : string = `${props.Type} fa-${props.Data} ${styles.Icon}`\r\n    return (\r\n        <a href={props.Url}>\r\n            <i className={Style}></i>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Icon","import React from 'react'\r\nimport Page from '../../components/Page'\r\nimport Navbar from '../../components/Navbar'\r\nimport ImageProfile from '../../components/ImageProfile'\r\nimport Layout from '../../components/Layout'\r\nimport Text from '../../components/Text'\r\nimport Icon from '../../components/Icon'\r\n\r\nclass Home extends React.Component {\r\n    render () {\r\n        return (\r\n            <Page>\r\n                <Navbar/>\r\n                <Layout direction=\"row\">\r\n                    <ImageProfile/>\r\n                    <Layout direction=\"column\">\r\n                        <Text></Text>\r\n                        <Layout direction=\"row\">\r\n                            <Icon Url=\"https://instagram.com/jessijess_99\" Type=\"fas\" Data=\"envelope-square\"></Icon>\r\n                            <Icon Url=\"https://github.com/munyaaa\" Type=\"fab\" Data=\"github\"></Icon>\r\n                            <Icon Url=\"https://linkedin.com/in/jessicajimantoro\" Type=\"fab\" Data=\"linkedin\"></Icon>\r\n                            <Icon Url=\"https://line.me/ti/p/~jessi_jess\" Type=\"fab\" Data=\"line\"></Icon>\r\n                            <Icon Url=\"https://instagram.com/jessijess_99\" Type=\"fab\" Data=\"instagram\"></Icon>\r\n                        </Layout>\r\n                    </Layout>\r\n                </Layout>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Page from '../../components/Page'\r\nimport Navbar from '../../components/Navbar'\r\n\r\nclass Home extends React.Component {\r\n    render () {\r\n        return (\r\n            <Page>\r\n                <Navbar/>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Page from '../../components/Page'\r\nimport Navbar from '../../components/Navbar'\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <Page>\r\n                <Navbar/>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Page from '../../components/Page'\r\nimport Navbar from '../../components/Navbar'\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <Page>\r\n                <Navbar/>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport { Home, Experiences } from './pages'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport './App.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" >\n            <Home />\n          </Route>\n          <Route exact path=\"/experiences\" >\n            <Experiences />\n          </Route>\n          <Route exact path=\"/skills\" >\n            <Experiences />\n          </Route>\n          <Route exact path=\"/projects\" >\n            <Experiences />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}